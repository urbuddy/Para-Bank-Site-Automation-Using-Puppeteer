'use strict';

var util = require('util');
var child_process = require('child_process');
var treeKill = require('tree-kill');
var exit = require('exit');
var onExit = require('signal-exit');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var treeKill__default = /*#__PURE__*/_interopDefaultLegacy(treeKill);
var exit__default = /*#__PURE__*/_interopDefaultLegacy(exit);
var onExit__default = /*#__PURE__*/_interopDefaultLegacy(onExit);

const pTreeKill = util.promisify(treeKill__default["default"]);
function spawnd(command, options) {
    function cleanExit(code = 1) {
        if (proc && proc.pid) {
            treeKill__default["default"](proc.pid, ()=>exit__default["default"](code));
        } else {
            exit__default["default"](code);
        }
    }
    const proc = child_process.spawn(command, options);
    proc.stderr.pipe(process.stderr);
    proc.on("exit", cleanExit);
    proc.on("error", ()=>cleanExit(1));
    const removeExitHandler = onExit__default["default"]((code)=>{
        cleanExit(typeof code === "number" ? code : 1);
    });
    proc.destroy = async ()=>{
        removeExitHandler();
        proc.removeAllListeners("exit");
        proc.removeAllListeners("error");
        return pTreeKill(proc.pid).catch(()=>{
        /* ignore error */ });
    };
    return proc;
}

module.exports = spawnd;
